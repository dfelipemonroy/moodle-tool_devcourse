{"version":3,"file":"confirmation.min.js","sources":["../src/confirmation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Confirms the deletion of an entry\n *\n * @module     tool_devcourse/confirmation\n * @copyright  2025 Diego Monroy <diego.monroy@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as str from 'core/str';\nimport * as notification from 'core/notification';\n\n/**\n * Shows a confirmation dialog for deletion and redirects if confirmed.\n * @param {string} url - The URL to redirect to if deletion is confirmed.\n */\nexport const confirmDeletion = (url) => {\n    let pluginname = 'tool_devcourse';\n\n    str.get_strings([\n        {key: 'delete'},\n        {key: 'confirmdeleteentry', component: pluginname},\n        {key: 'yes'},\n        {key: 'no'}\n    ])\n    .then(strings => {\n        // Show confirmation dialog. If user confirms, redirect to the given URL.\n        notification.confirm(strings[0], strings[1], strings[2], strings[3], () => {\n            window.location.href = url;\n        });\n        return null;\n    })\n    // Handle any errors that occur during the string retrieval or confirmation dialog.\n    .catch(notification.exception);\n};\n\n/**\n * Attaches a click handler to all elements matching the selector to trigger confirmation.\n * @param {string} selector - CSS selector for elements that trigger the confirmation dialog.\n */\nexport const onClickHandler = (selector) => {\n    document.querySelectorAll(selector).forEach(item => {\n        item.addEventListener('click', event => {\n            // Prevent the default link behavior.\n            event.preventDefault();\n            const href = item.getAttribute('href');\n            if (href) {\n                confirmDeletion(href);\n            }\n        });\n    });\n};\n\n/**\n * Initializes the deletion confirmation functionality for selected elements.\n * @param {string} selector - CSS selector for elements that trigger the confirmation dialog.\n */\nexport const init = (selector) => {\n    onClickHandler(selector);\n};\n"],"names":["confirmDeletion","url","str","get_strings","key","component","then","strings","notification","confirm","window","location","href","catch","exception","onClickHandler","selector","document","querySelectorAll","forEach","item","addEventListener","event","preventDefault","getAttribute"],"mappings":";;;;;;;6NA8BaA,gBAAmBC,MAG5BC,IAAIC,YAAY,CACZ,CAACC,IAAK,UACN,CAACA,IAAK,qBAAsBC,UAJf,kBAKb,CAACD,IAAK,OACN,CAACA,IAAK,QAETE,MAAKC,UAEFC,aAAaC,QAAQF,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,IAAI,KACjEG,OAAOC,SAASC,KAAOX,OAEpB,QAGVY,MAAML,aAAaM,2DAOXC,eAAkBC,WAC3BC,SAASC,iBAAiBF,UAAUG,SAAQC,OACxCA,KAAKC,iBAAiB,SAASC,QAE3BA,MAAMC,uBACAX,KAAOQ,KAAKI,aAAa,QAC3BZ,MACAZ,gBAAgBY,kEAUXI,WACjBD,eAAeC"}